import 'package:flutter/material.dart';
import 'package:flutter_svg/flutter_svg.dart';

final vocalSvgString = '''
<svg width="35" height="32" viewBox="0 0 35 32" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M10.1396 0.775391C11.6303 0.470533 13.5939 0.425403 15.5449 0.608398C17.4968 0.791493 19.3896 1.1986 20.7432 1.76855C22.1671 2.3682 23.1206 2.996 23.6982 3.67188C24.2592 4.32834 24.486 5.05186 24.415 5.91797C24.352 6.68669 24.4433 7.42044 24.6943 8.23145C25.0067 9.24043 25.0302 10.8289 24.7432 11.9062C24.7005 12.0663 24.6833 12.2388 24.7178 12.4365C24.7503 12.6233 24.8243 12.807 24.9268 12.999C25.1261 13.3726 25.49 13.8848 26.0713 14.6689V14.6699C26.6419 15.4399 26.9623 15.9011 27.1367 16.2217C27.2996 16.5211 27.306 16.644 27.2959 16.75C27.2776 16.9407 27.2521 16.9672 27.21 17.0088C27.1158 17.1015 26.9194 17.2226 26.4346 17.4678L25.3564 18.0137L25.083 18.1523V19.918L24.4307 20.1836L23.4668 20.5752L22.5576 20.9443L23.3906 21.4629L24.3223 22.043C24.535 22.1754 24.719 22.3055 24.8525 22.4102C24.4723 23.2139 24.2041 24.0647 24.0664 24.9141C23.9682 25.519 23.8543 26.1942 23.8125 26.415C23.8156 26.3985 23.8164 26.409 23.7939 26.4482C23.7734 26.4841 23.7409 26.5299 23.6973 26.5811C23.6086 26.685 23.4943 26.7853 23.3838 26.8535C23.1487 26.9985 22.7913 27.1059 22.1416 27.1289C21.4911 27.1519 20.5972 27.0893 19.3242 26.9375C18.6773 26.8603 18.2098 26.8187 17.8779 26.8203C17.712 26.8211 17.556 26.8332 17.417 26.8662C17.3114 26.8913 17.197 26.9331 17.0928 27.0068L16.9922 27.0918C16.8844 27.201 16.8241 27.3327 16.7881 27.4365C16.7502 27.5458 16.7252 27.6643 16.709 27.7822C16.6766 28.0187 16.6712 28.3009 16.6855 28.6016C16.7144 29.2055 16.8266 29.9446 17.0117 30.667C17.0803 30.9348 17.1298 31.1928 17.1602 31.3965C17.1553 31.3968 17.1505 31.3981 17.1455 31.3984C16.8501 31.4191 16.4156 31.438 15.8555 31.4531C14.7369 31.4834 13.1375 31.5 11.1914 31.5C8.4639 31.5 6.87828 31.49 5.96387 31.4521C5.60779 31.4374 5.36988 31.419 5.21289 31.3984C5.21676 31.3608 5.2196 31.3191 5.22559 31.2744C5.25694 31.0405 5.31411 30.7444 5.38965 30.4473C5.65288 29.4126 5.83978 28.2502 5.93262 27.1875C6.02458 26.1347 6.02751 25.1393 5.90137 24.4531C5.8065 23.9369 5.71512 23.5572 5.4668 23.1396C5.23376 22.7478 4.87145 22.339 4.2998 21.7197C2.79035 20.085 1.81424 18.4604 1.11914 16.4307C0.686397 15.167 0.587128 14.5843 0.516602 12.7842C0.440363 10.8363 0.626487 9.26361 1.10742 7.89746C1.58686 6.53567 2.36935 5.34999 3.52734 4.19043C5.33221 2.38324 7.31259 1.35367 10.1396 0.775391ZM32.9609 17.249C32.9864 17.259 33.0631 17.2967 33.1846 17.4375C33.4912 17.7928 33.854 18.5292 34.2012 19.6641C34.4848 20.591 34.5402 21.0902 34.4756 22.3086C34.3976 23.7776 34.0208 25.0983 33.5801 25.8955C33.3522 26.3078 33.1481 26.5057 33.0254 26.5664C32.9781 26.5898 32.9686 26.5806 32.9785 26.583C32.9758 26.5822 32.9502 26.5702 32.9023 26.5166C32.9036 26.5095 32.9049 26.501 32.9072 26.4912C32.9405 26.3494 33.0419 26.1054 33.2764 25.6289C34.4728 23.1974 34.4696 20.6614 33.2734 18.1982C33.0374 17.7121 32.9384 17.4701 32.9072 17.3311C32.9049 17.3205 32.9035 17.3118 32.9023 17.3047C32.9296 17.2729 32.9491 17.2569 32.9609 17.249ZM31.1719 18.6709C31.749 19.2545 32.089 20.2613 32.0898 21.9131C32.0902 22.6451 32.0736 23.0376 32.0098 23.3613C31.9484 23.672 31.8392 23.9414 31.6035 24.418C31.3229 24.9856 31.1062 25.2304 30.9863 25.3027C30.9853 25.3034 30.9834 25.3031 30.9824 25.3037C30.9681 25.2923 30.9456 25.273 30.917 25.2383C30.9177 25.2316 30.919 25.2227 30.9209 25.2119C30.9435 25.0853 31.0248 24.8631 31.2266 24.4082C31.9303 22.822 31.9547 20.9158 31.2412 19.4932C31.1091 19.2298 31.0154 19.0323 30.9531 18.8789C30.9092 18.7706 30.8893 18.6989 30.8789 18.6543C30.8883 18.6483 30.8989 18.6406 30.9121 18.6328C30.9722 18.5974 31.0178 18.5747 31.0508 18.5576C31.0796 18.5836 31.1198 18.6182 31.1719 18.6709ZM29.1982 19.8936C29.1961 19.8924 29.2122 19.9017 29.2432 19.9346C29.273 19.9664 29.3092 20.0128 29.3496 20.0762C29.4315 20.2048 29.5159 20.3807 29.5918 20.5908C29.7444 21.0132 29.8447 21.5223 29.8447 21.9688C29.8447 22.3712 29.7086 22.9165 29.5088 23.3779C29.4101 23.6057 29.3047 23.7907 29.2109 23.915C29.18 23.9561 29.1532 23.9854 29.1328 24.0059C29.0981 23.9889 29.0548 23.9582 29.0156 23.915C28.9788 23.8744 28.9586 23.8366 28.9492 23.8125C29.2739 23.0412 29.4821 22.4839 29.4824 21.9043C29.4826 21.3206 29.2724 20.7658 28.9453 19.999C28.9514 19.9818 28.9663 19.954 28.9951 19.9248C29.0308 19.8887 29.0605 19.8597 29.0859 19.835C29.1172 19.8511 29.154 19.8696 29.1982 19.8936Z" stroke="#979696"/>
</svg>
''';

class VocalSvg extends StatelessWidget {
  final double svgWidth;
  final double svgHeight;
  final double viewBoxWidth;
  final double viewBoxHeight;
  final Color color;

  const VocalSvg({
    super.key,
    this.svgWidth = 35,
    this.svgHeight = 32,
    this.viewBoxWidth = 35,
    this.viewBoxHeight = 32,
    this.color = const Color(0xFFCDCDCD),
  });

  @override
  Widget build(BuildContext context) {
    String svg = vocalSvgString
        .replaceAll(RegExp(r'width="[^"]*"'), 'width="$svgWidth"')
        .replaceAll(RegExp(r'height="[^"]*"'), 'height="$svgHeight"')
        .replaceAll(
          RegExp(r'viewBox="[^"]*"'),
          'viewBox="0 0 $viewBoxWidth $viewBoxHeight"',
        )
        .replaceAll(
          RegExp(r'stroke="#[A-Fa-f0-9]{6,8}"'),
          'stroke="${_colorToHex(color)}"',
        );

    return SvgPicture.string(
      svg,
      width: svgWidth,
      height: svgHeight,
      fit: BoxFit.cover,
    );
  }

  String _colorToHex(Color color) {
    return '#${color.value.toRadixString(16).padLeft(8, '0').substring(2)}';
  }
}
